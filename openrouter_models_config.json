{
  "comment": "Configuration example for limiting OpenRouter to specific 12 models",
  "comment2": "This configuration should be applied to the OPENAI_API_CONFIGS for the OpenRouter connection",
  "openrouter_config": {
    "enable": true,
    "connection_type": "external",
    "model_ids": [
      "anthropic/claude-sonnet-4",
      "google/gemini-2.5-flash",
      "google/gemini-2.5-pro",
      "deepseek/deepseek-chat-v3-0324",
      "anthropic/claude-3.7-sonnet",
      "google/gemini-2.5-flash-lite-preview-06-17",
      "openai/gpt-4.1",
      "x-ai/grok-4",
      "openai/gpt-4o-mini",
      "openai/o4-mini-high",
      "openai/o3",
      "openai/chatgpt-4o-latest"
    ],
    "tags": ["openrouter"],
    "prefix_id": null
  },
  "instructions": {
    "1": "When adding OpenRouter as a connection in Open WebUI, use this configuration",
    "2": "The model_ids array will filter to show only these 12 specific models",
    "3": "No wildcard patterns are needed since we're specifying exact model IDs",
    "4": "This configuration can be updated through the Admin API or directly in the database"
  },
  "api_setup": {
    "base_url": "https://openrouter.ai/api/v1",
    "api_key": "Your OpenRouter API key here"
  }
}